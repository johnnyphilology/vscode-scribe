name: CI

on:
  push:
    branches: [main, 'feature/*', 'bugfix/*']
  pull_request:
    branches: [main]
  release:
    types: [created]

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [18, 20] # LTS versions only
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Compile TypeScript
        run: npm run compile

      - name: Compile for Web
        run: npm run compile:web

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests (Linux only)
        run: xvfb-run -a npm test
        if: runner.os == 'Linux' && matrix.node == '20'

  publish:
    name: Publish to GitHub Packages
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Package extension
        run: npm run package-extension

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: '*.vsix'

      - name: Attach VSIX to release
        run: |
          # Get the release tag from the GitHub event
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VSIX_FILE=$(ls *.vsix | head -1)
          
          echo "📦 Uploading $VSIX_FILE to release $TAG_NAME"
          
          # Upload the VSIX file to the release
          if gh release upload "$TAG_NAME" "$VSIX_FILE" --clobber; then
            echo "✅ Successfully attached VSIX to release"
          else
            echo "⚠️ Could not attach VSIX to release automatically"
            echo "📦 VSIX file is available as workflow artifact"
            echo "🔗 Download from: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          # Configure npm to publish to GitHub Packages
          echo "@johnnyphilology:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          
          # Update package.json for GitHub Packages
          npm pkg set "publishConfig.registry=https://npm.pkg.github.com"
          npm pkg set "name=@johnnyphilology/scribe"
          
          # Publish the package
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
